{"version":3,"sources":["components/Translate.js","helpers/Vowels.js","helpers/Numbers.js","App.js","reportWebVitals.js","index.js"],"names":["Translate","props","numbers","state","coded","code","defaultSentence","decoded","handleChange","bind","field","event","value","target","this","setState","decode","cols","rows","onChange","Component","Vowels","words","a","fetch","response","text","split","filter","word","test","letters","Math","floor","random","length","sentence","vowel","getRandomVowel","replace","toUpperCase","map","simplifiedWord","w","distance","levenshtein","reduce","acc","join","Numbers","vowels","sum","newSentence","accumulator","letter","tmp","push","i","charAt","Number","App","fetchWords","id","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16431cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Translate component\n *\n * Display two textarea and translate the text from\n * one textarea to the other each time its value is changed.\n */\nexport class Translate extends Component {\n  constructor(props) {\n    super(props);\n    this.numbers = props.numbers;\n\n    this.state = {\n      coded: this.numbers.code(props.defaultSentence),\n      decoded: props.defaultSentence,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(field, event) {\n    const value = event.target.value;\n\n    switch (field) {\n      case 'coded':\n        this.setState({\n          coded: value,\n          decoded: this.numbers.decode(value),\n        });\n        break;\n\n      case 'decoded':\n        this.setState({\n          decoded: value,\n          coded: this.numbers.code(value),\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({ [field]: event.target.value });\n  }\n\n  render() {\n    return (\n      <>\n        <form>\n          <label>\n            <textarea\n              cols=\"50\"\n              rows=\"30\"\n              value={this.state.decoded}\n              onChange={this.handleChange.bind(this, 'decoded')}\n            />\n            <textarea cols=\"50\" rows=\"30\" value={this.state.coded} onChange={this.handleChange.bind(this, 'coded')} />\n          </label>\n        </form>\n      </>\n    );\n  }\n}\n","import levenshtein from 'js-levenshtein';\n\n/**\n * Single vowel translation\n */\nexport class Vowels {\n  constructor() {\n    this.words = [];\n  }\n\n  /**\n   * Load french dictionary\n   */\n  async fetchWords() {\n    const response = await fetch('https://raw.githubusercontent.com/g-ongenae/Morphalou-Crawler/result/result.txt');\n    this.words = (await response.text()).split('\\n').filter((word) => !/[\\s]/g.test(word));\n  }\n\n  /**\n   * Get a random vowel (without accentuation)\n   */\n  getRandomVowel() {\n    const letters = ['a', 'e', 'i', 'o', 'u', 'y'];\n    return letters[Math.floor(Math.random() * letters.length)];\n  }\n\n  /**\n   * Replace all vowels to the same one randomly chosen\n   */\n  code(sentence = '') {\n    const vowel = this.getRandomVowel();\n\n    // TODO Extract and build regexes\n    return sentence\n      .replace(/[aáàâäãåāeéèêëęėēiìîïìįoòôöóõøōuùûüúūyÿ]/g, vowel)\n      .replace(/[æœ]/g, `${vowel}${vowel}`)\n      .replace(/[AÁÀÂÂÄÃÅĀEÉÈÊËĘĖĒIÎÏÌÍĮĪOÔÖÒÓÕØŌUÛÙÜÚŪYŸ]/g, vowel.toUpperCase())\n      .replace(/[ÆŒ]/g, `${vowel.toUpperCase()}${vowel.toUpperCase()}`);\n  }\n\n  /**\n   * Transform a text from a single vowel to a readable format\n   */\n  decode(sentence = '') {\n    return sentence\n      .split(/\\b/)\n      .map((word) => {\n        // Ignore spaces and typography\n        if (/\\W|\\d/.test(word)) {\n          return word;\n        }\n\n        const simplifiedWord = word.replace(/[aeiouy]/g, 'a');\n\n        // Find words of the same length and modify them to correct levenshtein distance\n        // Then find the closest word in the distance of levenshtein\n        return this.words\n          .filter((w) => word.length === w.length)\n          .map((w) => ({ word: w, distance: levenshtein(w.replace(/[aeiouy]/g, 'a'), simplifiedWord) }))\n          .reduce((acc, w) => (w.distance <= acc.distance ? w : acc), { distance: 50, word: '' }).word;\n      })\n      .join('');\n  }\n}\n","/**\n * Vowels transformation by counter\n */\nexport class Numbers {\n  constructor(vowels) {\n    this.vowels = vowels;\n  }\n\n  /**\n   * Replace all vowels to their count by groups\n   *\n   * @example\n   *  - 'Replace all vowels to their count by groups'\n   *  - 'R1pl1ce 1ll v1w1ls t1 th2r c2nt by gr2ps'\n   */\n  code(sentence = '') {\n    let sum = 0;\n\n    const newSentence = sentence.split('').reduce((accumulator, letter) => {\n      // TODO Extract and build regexes\n      if (/[aáàâäãåāeéèêëęėēiìîïìįoòôöóõøōuùûüúūyÿ]/i.test(letter)) {\n        sum += 1;\n      } else if (/[æœ]/i.test(letter)) {\n        sum += 2;\n      } else {\n        const tmp = sum === 0 ? letter : `${sum}${letter}`;\n        sum = 0;\n        accumulator.push(tmp);\n      }\n\n      return accumulator;\n    }, []);\n\n    // Fix last char of the sentence is missing due to being a a vowel\n    if (sum !== 0) {\n      newSentence.push(sum);\n    }\n\n    return newSentence.join('');\n  }\n\n  /**\n   * Transform a text from a vowels as count to a readable format\n   */\n  decode(sentence = '') {\n    let newSentence = '';\n    const letters = ['a', 'aa', 'aaa', 'aaaa', 'aaaaa', 'aaaaaa'];\n\n    for (let i = 0; i < sentence.length; i++) {\n      // Only replace from 1 to 6 because there's no case of 7 consecutive vowels in french\n      // See http://cruciverbiste.club/index.php?id_cms=172&controller=cms\n      if (\n        /[1-6]/.test(sentence[i]) &&\n        (i === 0 || /\\D/.test(sentence[i - 1])) &&\n        (i === sentence.length - 1 || /\\D/.test(sentence[i + 1]))\n      ) {\n        newSentence += letters[Number(sentence[i]) - 1];\n      } else {\n        newSentence += sentence.charAt(i);\n      }\n    }\n\n    return this.vowels.decode(newSentence);\n  }\n}\n","import { Component } from 'react';\nimport './App.css';\nimport { Translate } from './components/Translate';\nimport { Vowels, Numbers } from './helpers';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const vowels = new Vowels();\n\n    this.state = {\n      vowels,\n      numbers: new Numbers(vowels),\n    };\n  }\n\n  componentDidMount() {\n    return this.state.vowels.fetchWords();\n  }\n\n  render() {\n    // prettier-ignore\n    return (\n      <>\n        <h1>{this.state.vowels.code('translater')}</h1>\n        <p>Traduis en langage <span><span id=\"uwu\">uwu</span></span>.</p>\n\n        <Translate defaultSentence=\"Écrivez-ici\" vowels={this.state.vowels} numbers={this.state.numbers} />\n\n        <footer>dev by <a href=\"http://g-ongenae.gihub.io\">Guillaume Ongenae</a></footer>\n      </>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}